# Pipeline to deploy 3-tier Architecture Infra using Terraform
name: Terraform Deploy Pipeline

on:
  push:
    branches:
      - main
#   pull_request:
#     branches:
#       - main

jobs:
  Terraform_Infra_Deploy:
    runs-on: ubuntu-latest

    env:
      # Define AWS Credentials as secrets in your repo secret settings
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      # Define Terraform Version
      TERRAFORM_VERSION: 1.12.0
      TERRAFORM_WORKING_DIR: ./Root

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{env.TERRAFORM_VERSION}}
        
      - name: Initialize Terraform
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}
        run: terraform init

      - name: Format Terraform Code
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}
        run: terraform fmt

      # Generate terraform.tfvars file dynamically

      - name: Create terraform.tfvars file
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}
        run: |
          cat > terraform.tfvars <<EOF
          region                  = "${{ env.AWS_REGION }}"
          project_name            = "three-tier-app"
          vpc_cidr                = "192.168.0.0/16"
          pub_sub_1a_cidr         = "192.168.0.0/19"
          pub_sub_2b_cidr         = "192.168.32.0/19"
          pri_sub_3a_cidr         = "192.168.64.0/19"
          pri_sub_4b_cidr         = "192.168.96.0/19"
          pri_sub_5a_cidr         = "192.168.128.0/19"
          pri_sub_6b_cidr         = "192.168.160.0/19"
          db_username             = "${{ secrets.DB_USERNAME }}"
          db_password             = "${{ secrets.DB_PASSWORD }}"
          certificate_domain_name = "${{ vars.CERTIFICATE_DOMAIN_NAME }}"
          additional_domain_name  = "${{ vars.ADDITIONAL_DOMAIN_NAME }}"
          EOF

      - name: Validate Terraform
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}
        run: terraform plan -lock=false